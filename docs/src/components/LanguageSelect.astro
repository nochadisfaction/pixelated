---
import type { Props } from '../props'
import config from 'virtual:vitesse/user-config'
import { localizedUrl } from '../utils/localized-url'

/**
 * Get the equivalent of the current page path for the passed locale.
 */
function localizedPathname(locale: string | undefined): string {
  return localizedUrl(Astro.url, locale).pathname
}
---

{
  config.isMultilingual && (
    <vitesse-lang-select>
      <label>
        <span class="sr-only">{Astro.locals.t('languageSelect.accessibleLabel')}</span>
        <select class="px-2 op60 bg-base hover:op100">
          {Object.entries(config.locales).map(([code, locale]) => (
            <option value={localizedPathname(code)} selected={code === Astro.props.locale}>
              {locale.label}
            </option>
          ))}
        </select>
      </label>
    </vitesse-lang-select>
  )
}

<script>
  class VitesseLanguageSelect extends HTMLElement {
    constructor() {
      super()
      const select = this.querySelector('select')
      if (select) {
        select.addEventListener('change', (e) => {
          if (e.currentTarget instanceof HTMLSelectElement) {
            window.location.pathname = e.currentTarget.value
          }
        })
      }
    }
  }
  customElements.define('vitesse-lang-select', VitesseLanguageSelect)
</script>
