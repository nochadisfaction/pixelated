---
import type { Props } from '../props'

import config from 'virtual:vitesse/user-config'
import { formatDate } from '../logics'
import DraftContentNotice from './DraftContentNotice.astro'
import FallbackContentNotice from './FallbackContentNotice.astro'
import Toc from './Toc.astro'

const { entry, hasToc, headings } = Astro.props
const { data: frontmatter } = entry

let tweetUrl = ''
let elkUrl = ''

if (config.social?.twitter) {
  const twitterUser = new URL(config.social.twitter.url).pathname.slice(1)
  tweetUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(`Reading @${twitterUser}\'s ${Astro.url}\n\nI think...`)}`
}

if (config.social?.mastodon) {
  const urlMastodon = new URL(config.social.mastodon.url)
  const mastodonUser = urlMastodon.pathname.slice(1)
  const host = urlMastodon.host

  elkUrl = `https://elk.zone/intent/post?text=${encodeURIComponent(`Reading ${mastodonUser}@${host}\'s ${Astro.url}\n\nI think...`)}`
}
---

{
  (frontmatter.display ?? frontmatter.title) && (
    <div class:list={['prose m-auto mb-8', frontmatter.wrapperClass]}>
      <h1 class="mb-0 slide-enter-50">{frontmatter.display ?? frontmatter.title}</h1>
      {frontmatter.date && (
        <p class="opacity-50 slide-enter-50 !-mt-6">
          {formatDate(frontmatter.date, false)} {frontmatter.duration && ` Â· ${frontmatter.duration}`}
        </p>
      )}
      {frontmatter.place && (
        <p class="mt--4!">
          <span class="op50">at </span>
          {frontmatter.placeLink ? (
            <a href={frontmatter.placeLink} target="_blank">
              {frontmatter.place}
            </a>
          ) : (
            <span class="font-bold">{frontmatter.place}</span>
          )}
        </p>
      )}
      {frontmatter.subtitle && <p class="slide-enter italic opacity-50 !-mt-6">{frontmatter.subtitle}</p>}
    </div>
  )
}
{
  (Astro.props.entry.data.draft || Astro.props.isFallback) && (
    <div class:list={['prose m-auto mb-8', frontmatter.wrapperClass]}>
      {Astro.props.entry.data.draft && <DraftContentNotice {...Astro.props} />}
      {Astro.props.isFallback && <FallbackContentNotice {...Astro.props} />}
    </div>
  )
}
<article
  class:list={[
    frontmatter.tocAlwaysOn ? 'toc-always-on' : '',
    frontmatter.layoutFullWidth ? '' : 'prose m-auto slide-enter-content',
  ]}
>
  {
    hasToc && (
      <section>
        <Toc headings={headings} />
      </section>
    )
  }
  <slot />
</article>
{
  Astro.url.pathname !== '/' && (
    <div class="prose slide-enter m-auto mb-8 mt-8 animate-delay-500 print:hidden">
      {frontmatter.duration && (elkUrl || tweetUrl) && (
        <>
          <span class="font-mono op50">&gt; </span>
          <span class="op50">{Astro.locals.t('comment.on')} </span>
          {elkUrl && (
            <a href={elkUrl} target="_blank" class="op50">
              mastodon
            </a>
          )}
          {elkUrl && tweetUrl && <span class="op25"> / </span>}
          {tweetUrl && (
            <a href={tweetUrl} target="_blank" class="op50">
              twitter
            </a>
          )}
        </>
      )}
      <br />
      <span class="font-mono op50">&gt; </span>
      <a href={Astro.url.pathname.split('/').slice(0, -2).join('/') || '/'} class="font-mono op50 hover:op75">
        cd ..
      </a>
    </div>
  )
}
