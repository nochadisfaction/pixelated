---
import Plum from '@/components/backgrounds/Plum.astro'
import Rose from '@/components/backgrounds/Rose.astro'
import Particle from '@/components/backgrounds/Particle.astro'
import GradientAnimation from '@/components/backgrounds/GradientAnimation.astro'

import type { BgType } from '@/types'

interface Props {
  type: BgType
  colorScheme?: 'default' | 'purple' | 'blue' | 'green' | 'sunset'
}

const { type, colorScheme = 'default' } = Astro.props
---

{
  type === ('default' as BgType) && (
    <div class="fixed inset-0 -z-10 bg-gradient-to-b from-white to-gray-50 dark:from-gray-900 dark:to-gray-950" />
  )
}
{type === ('plum' as BgType) && <Plum />}
{
  type === ('gradient' as BgType) && (
    <div class="fixed inset-0 -z-10 bg-gradient-to-br from-gray-100 via-gray-50 to-gray-200 dark:from-gray-900 dark:via-gray-800 dark:to-gray-950" />
  )
}
{type === ('pulse' as BgType) && <Particle />}
{type === ('light' as BgType) && <div class="fixed inset-0 -z-10 bg-white" />}
{type === ('dark' as BgType) && <div class="fixed inset-0 -z-10 bg-gray-900" />}
{type === ('stars' as BgType) && <Rose />}
{type === ('rose' as BgType) && <Rose />}
{
  type === ('animated' as BgType) && (
    <GradientAnimation colorScheme={colorScheme} />
  )
}
