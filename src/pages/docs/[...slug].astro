---
import { getCollection, type CollectionEntry, render } from 'astro:content'
import BlogPostLayout from '@/layouts/BlogPostLayout.astro'

export const prerender = true

export async function getStaticPaths() {
  const docs = await getCollection('docs')
  return docs
    .filter((doc: CollectionEntry<'docs'>) => !doc.data.draft)
    .map((doc: CollectionEntry<'docs'>) => ({
      params: { slug: doc.data.slug || doc.slug },
      props: { entry: doc },
    }))
}

interface Props {
  entry: CollectionEntry<'docs'>
}

const { entry } = Astro.props
const { Content } = await render(entry)

// Get related docs (same category or tags)
const allDocs = await getCollection(
  'docs',
  ({ data }: CollectionEntry<'docs'>) => !data.draft,
)

const relatedDocs = allDocs
  .filter(
    (d: CollectionEntry<'docs'>) =>
      d.id !== entry.id && // Not the current doc
      (d.data.category === entry.data.category || // Same category
        d.data.tags?.some((tag: string) => entry.data.tags?.includes(tag))), // Shared tags
  )
  .sort(() => Math.random() - 0.5) // Randomize
  .slice(0, 3) // Get up to 3 related docs
---

<BlogPostLayout {entry}>
  <Content />
</BlogPostLayout>