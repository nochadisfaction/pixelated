---
import BaseLayout from '@/layouts/BaseLayout.astro'
import { ClientRouter } from 'astro:transitions'
import Link from '@/components/base/Link.astro'

// Get the image ID from URL query params or default to 1
const imageId = Astro.url.searchParams.get('id') || '1'
const id = parseInt(imageId)

// Sample images for transition demonstration
const images = [
  {
    id: 1,
    src: 'https://images.unsplash.com/photo-1674574124792-3be232f1a2c5?w=800&auto=format&fit=crop',
    alt: 'Colorful abstract gradient',
    title: 'Colorful Gradient',
    description:
      'An abstract digital artwork with vibrant colors blending together.',
  },
  {
    id: 2,
    src: 'https://images.unsplash.com/photo-1671226366569-2b8a0aa58bf1?w=800&auto=format&fit=crop',
    alt: 'Vibrant waves pattern',
    title: 'Wave Patterns',
    description:
      'Digital waves flowing in a mesmerizing pattern of colors and shapes.',
  },
  {
    id: 3,
    src: 'https://images.unsplash.com/photo-1671226366557-912958a5fef1?w=800&auto=format&fit=crop',
    alt: 'Digital art pattern',
    title: 'Geometric Forms',
    description:
      'A modern digital composition featuring geometric shapes and patterns.',
  },
]

// Get the current image
const currentImage = images.find((img) => img.id === id) || images[0]

// Get next and previous image IDs for navigation
const prevId = id > 1 ? id - 1 : images.length
const nextId = id < images.length ? id + 1 : 1
---

<BaseLayout
  title={`Image ${currentImage.id} - Transition Demo`}
  description="See how images can smoothly transition between pages"
  bgType="particle"
>
  <ClientRouter />

  <div class="max-w-4xl mx-auto px-4 py-12">
    <header class="mb-8 flex justify-between items-center">
      <Link href="/transitions-demo" class="text-sm op-70 hover:op-100">
        &larr; Back to Demos
      </Link>

      <h1 class="text-3xl font-bold text-center">Image Transitions</h1>

      <div class="w-20"></div>
      <!-- Spacer for alignment -->
    </header>

    <div class="grid md:grid-cols-2 gap-8 mb-12">
      <div class="overflow-hidden rounded-lg shadow-lg">
        <img
          src={currentImage.src}
          alt={currentImage.alt}
          transition:name={`image-${currentImage.id}`}
          class="w-full h-auto object-cover aspect-video"
        />
      </div>

      <div class="flex flex-col justify-center">
        <h2
          class="text-2xl font-semibold mb-4"
          transition:name={`title-${currentImage.id}`}
        >
          {currentImage.title}
        </h2>

        <p class="text-lg mb-6 opacity-80">{currentImage.description}</p>

        <div class="flex items-center justify-between mt-4">
          <Link
            href={`/transitions-demo/image?id=${prevId}`}
            class="px-4 py-2 rounded-md bg-[#88888822] hover:bg-[#88888833] transition-all"
          >
            &larr; Previous
          </Link>

          <span class="text-sm opacity-70"
            >Image {currentImage.id} of {images.length}</span
          >

          <Link
            href={`/transitions-demo/image?id=${nextId}`}
            class="px-4 py-2 rounded-md bg-[#88888822] hover:bg-[#88888833] transition-all"
          >
            Next &rarr;
          </Link>
        </div>
      </div>
    </div>

    <div class="grid md:grid-cols-3 gap-4 mb-8">
      {
        images.map((image) => (
          <Link
            href={`/transitions-demo/image?id=${image.id}`}
            class={`block overflow-hidden rounded-lg ${image.id === id ? 'ring-2 ring-blue-500' : ''}`}
          >
            <img
              src={image.src}
              alt={image.alt}
              transition:name={`thumbnail-${image.id}`}
              class="w-full h-auto object-cover aspect-video hover:scale-105 transition-transform"
            />
          </Link>
        ))
      }
    </div>

    <div class="mt-8 p-6 border border-dashed rounded-lg">
      <h2 class="text-2xl font-semibold mb-4">How Element Transitions Work</h2>
      <div class="prose max-w-none opacity-80">
        <p>
          Elements with matching <code>transition:name</code> attributes will animate
          smoothly between pages:
        </p>

        <pre
          class="bg-slate-800 text-slate-200 rounded-md p-4 mt-4 overflow-x-auto">
<code>&lt;!-- On Page 1 -->
&lt;img src="/image1.jpg" transition:name="hero-image" /&gt;

&lt;!-- On Page 2 -->
&lt;img src="/image1.jpg" transition:name="hero-image" /&gt;</code>
        </pre>

        <p class="mt-4">
          This creates the illusion that the same element persists between page
          navigations, enhancing visual continuity and user experience.
        </p>
      </div>
    </div>
  </div>
</BaseLayout>
