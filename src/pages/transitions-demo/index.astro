---
import BaseLayout from '@/layouts/BaseLayout.astro'
import { ClientRouter } from 'astro:transitions'
import Link from '@/components/base/Link.astro'

// Define available transition modes for demo
const transitionModes = [
  { name: 'Default', description: 'Standard fade and scale transition' },
  { name: 'Fade', description: 'Simple opacity transition between pages' },
  { name: 'Slide', description: 'Horizontal slide transition' },
  { name: 'Slide Up', description: 'Slide up from bottom transition' },
  { name: 'Slide Down', description: 'Slide down from top transition' },
  { name: 'Zoom', description: 'Zoom in/out transition effect' },
]
---

<BaseLayout
  title="Transitions Demo"
  description="Explore Astro view transitions with various animations and effects"
  bgType="particle"
>
  <ClientRouter />

  <div class="max-w-3xl mx-auto px-4 py-12">
    <h1 class="text-4xl font-bold mb-8 text-center">Astro Transitions Demo</h1>

    <p class="text-lg mb-8 text-center opacity-80">
      Explore the different transition effects available in our Astro
      application. Each demo shows a different transition mode that can be used
      throughout the site.
    </p>

    <div class="grid md:grid-cols-2 gap-6 mb-12">
      {
        transitionModes.map((mode) => (
          <Link
            href={`/transitions-demo/${mode.name.toLowerCase().replace(' ', '-')}`}
            class="block p-6 rounded-lg bg-[#88888811] hover:bg-[#88888822] transition-all"
          >
            <h3 class="text-xl font-medium mb-2">{mode.name} Transition</h3>
            <p class="opacity-70">{mode.description}</p>
          </Link>
        ))
      }
    </div>

    <div class="mt-12 p-6 border border-dashed rounded-lg">
      <h2 class="text-2xl font-semibold mb-4">How it Works</h2>
      <div class="prose max-w-none opacity-80">
        <p>
          Astro's View Transitions API allows for smooth animations between page
          navigations, enhancing the user experience without sacrificing
          performance.
        </p>

        <h3 class="text-xl mt-6 mb-3">Key Features:</h3>
        <ul class="list-disc pl-5 space-y-2">
          <li>
            <strong>ClientRouter</strong>: Manages client-side navigation
            without full page reloads
          </li>
          <li>
            <strong>transition:animate</strong>: Apply animations to page
            elements during transitions
          </li>
          <li>
            <strong>transition:name</strong>: Persist elements between routes
            with matching names
          </li>
          <li>
            <strong>transition:persist</strong>: Keep elements intact during
            navigation
          </li>
        </ul>

        <pre
          class="bg-slate-800 text-slate-200 rounded-md p-4 mt-4 overflow-x-auto">
<code>// Example of using transition:name
&lt;img src={'src={image}'} transition:name={'`image-${id}`'} /&gt;

// Example of persisting a header
&lt;header transition:persist&gt;
  &lt;!-- Header content --&gt;
&lt;/header&gt;</code>
        </pre>
      </div>
    </div>
  </div>
</BaseLayout>
